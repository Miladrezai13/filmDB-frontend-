{"ast":null,"code":"var _jsxFileName = \"/Users/milad888/Desktop/Ho\\u0308gskolan/webb utveckling 2/inl5_/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FilmForm from './FilmForm';\nimport FilmList from './FilmList';\nimport Header from './Header';\nimport Footer from './Footer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [films, setFilms] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editableFilm, setEditableFilm] = useState(null);\n  const addFilm = filmData => {\n    const newFilm = {\n      id: Date.now(),\n      title: filmData.title,\n      description: filmData.description,\n      rating: filmData.rating,\n      thumbnail: filmData.thumbnail,\n      video: filmData.file\n    };\n    setFilms([...films, newFilm]);\n    setShowForm(false);\n  };\n  const deleteFilm = filmId => {\n    setFilms(films.filter(film => film.id !== filmId));\n  };\n  const handleEditFilm = updatedFilm => {\n    setFilms(films.map(film => film.id === updatedFilm.id ? updatedFilm : film));\n    setShowForm(false);\n    setEditableFilm(null);\n  };\n  const handleCancel = () => {\n    setShowForm(false);\n  };\n  const onCloseFormAndRefresh = () => {\n    setShowForm(false);\n  };\n  const startEditFilm = film => {\n    setEditableFilm(film);\n    setShowForm(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Filmdatabas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShowForm(true);\n        setEditableFilm(null);\n      },\n      children: \"Add New Film\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(FilmForm, {\n      filmToEdit: editableFilm,\n      onAddFilm: addFilm,\n      onEditFilm: handleEditFilm,\n      onCancel: handleCancel,\n      onCloseFormAndRefresh: onCloseFormAndRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FilmList, {\n      films: films,\n      onDelete: deleteFilm,\n      onEdit: startEditFilm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qOyOOmrsF8mxl8l0slYx7TCocss=\");\n_c = App;\nexport default App;\n\n//The code below is both for frontend and backend and the code above is olny for the frontend \n\n// import React, { useState, useEffect } from 'react';\n// import FilmForm from './FilmForm';\n// import FilmList from './FilmList';\n// import Header from './Header';\n// import Footer from './Footer';\n// import './App.css';\n\n// function App() {\n//   const [films, setFilms] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [editableFilm, setEditableFilm] = useState(null);\n\n//   const fetchFilms = () => {\n//     fetch('http://localhost:3000/films')\n//       .then(response => response.json())\n//       .then(data => {\n//         setFilms(data);\n//       })\n//       .catch(error => console.error('Error:', error));\n//   };\n\n//   const addFilm = (filmData) => {\n//     const formData = new FormData();\n//     formData.append('title', filmData.title);\n//     formData.append('description', filmData.description);\n//     formData.append('rating', filmData.rating);\n//     formData.append('thumbnail', filmData.thumbnail);\n//     formData.append('video', filmData.file);\n\n//     fetch('http://localhost:3000/films', {\n//       method: 'POST',\n//       body: formData,\n//     })\n//       .then(response => response.json())\n//       .then(() => {\n//         fetchFilms();\n//         setShowForm(false);\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n//   };\n\n//   const handleCancel = () => {\n//     setShowForm(false);\n//   };\n\n//   const onCloseFormAndRefresh = () => {\n//     setShowForm(false);\n//     setTimeout(() => {\n//       window.location.reload();\n//     }, 100);\n//   };\n\n//   useEffect(() => {\n//     fetchFilms();\n//   }, []);\n\n//   const deleteFilm = (filmId) => {\n//     fetch(`http://localhost:3000/films/${filmId}`, {\n//       method: 'DELETE',\n//     })\n//       .then(response => {\n//         if (response.ok) {\n//           fetchFilms();\n//         } else {\n//           console.error('Failed to delete the film');\n//         }\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n//   };\n\n//   const handleEditFilm = (updatedFilm) => {\n//     fetch(`http://localhost:3000/films/${updatedFilm.id}`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(updatedFilm),\n//     })\n//       .then(response => {\n//         if (response.ok) {\n//           fetchFilms();\n//         } else {\n//           console.error('Failed to update the film');\n//         }\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n\n//     setShowForm(false);\n//     setEditableFilm(null);\n//   };\n\n//   const startEditFilm = (film) => {\n//     setEditableFilm(film);\n//     setShowForm(true);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Header /> { }\n//       <h1>Filmdatabas</h1>\n//       <button onClick={() => { setShowForm(true); setEditableFilm(null); }}>Add New Film</button>\n//       {showForm && (\n//         <FilmForm\n//           filmToEdit={editableFilm}\n//           onAddFilm={addFilm}\n//           onEditFilm={handleEditFilm}\n//           onCancel={handleCancel}\n//           onCloseFormAndRefresh={onCloseFormAndRefresh}\n//         />\n//       )}\n//       <FilmList\n//         films={films}\n//         onDelete={deleteFilm}\n//         onEdit={startEditFilm}\n//       />\n//       <Footer /> { }\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FilmForm","FilmList","Header","Footer","jsxDEV","_jsxDEV","App","_s","films","setFilms","showForm","setShowForm","editableFilm","setEditableFilm","addFilm","filmData","newFilm","id","Date","now","title","description","rating","thumbnail","video","file","deleteFilm","filmId","filter","film","handleEditFilm","updatedFilm","map","handleCancel","onCloseFormAndRefresh","startEditFilm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filmToEdit","onAddFilm","onEditFilm","onCancel","onDelete","onEdit","_c","$RefreshReg$"],"sources":["/Users/milad888/Desktop/HoÌˆgskolan/webb utveckling 2/inl5_/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FilmForm from './FilmForm';\nimport FilmList from './FilmList';\nimport Header from './Header';\nimport Footer from './Footer';\nimport './App.css';\n\nfunction App() {\n  const [films, setFilms] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editableFilm, setEditableFilm] = useState(null);\n\n\n  const addFilm = (filmData) => {\n    const newFilm = {\n      id: Date.now(),\n      title: filmData.title,\n      description: filmData.description,\n      rating: filmData.rating,\n      thumbnail: filmData.thumbnail,\n      video: filmData.file\n    };\n    setFilms([...films, newFilm]);\n    setShowForm(false);\n  };\n\n\n  const deleteFilm = (filmId) => {\n    setFilms(films.filter(film => film.id !== filmId));\n  };\n\n\n  const handleEditFilm = (updatedFilm) => {\n    setFilms(films.map(film => film.id === updatedFilm.id ? updatedFilm : film));\n    setShowForm(false);\n    setEditableFilm(null);\n  };\n\n  const handleCancel = () => {\n    setShowForm(false);\n  };\n\n  const onCloseFormAndRefresh = () => {\n    setShowForm(false);\n  };\n\n  const startEditFilm = (film) => {\n    setEditableFilm(film);\n    setShowForm(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <h1>Filmdatabas</h1>\n      <button onClick={() => { setShowForm(true); setEditableFilm(null); }}>Add New Film</button>\n      {showForm && (\n        <FilmForm\n          filmToEdit={editableFilm}\n          onAddFilm={addFilm}\n          onEditFilm={handleEditFilm}\n          onCancel={handleCancel}\n          onCloseFormAndRefresh={onCloseFormAndRefresh}\n        />\n      )}\n      <FilmList\n        films={films}\n        onDelete={deleteFilm}\n        onEdit={startEditFilm}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n\n//The code below is both for frontend and backend and the code above is olny for the frontend \n\n\n// import React, { useState, useEffect } from 'react';\n// import FilmForm from './FilmForm';\n// import FilmList from './FilmList';\n// import Header from './Header';\n// import Footer from './Footer';\n// import './App.css';\n\n\n\n// function App() {\n//   const [films, setFilms] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [editableFilm, setEditableFilm] = useState(null);\n\n//   const fetchFilms = () => {\n//     fetch('http://localhost:3000/films')\n//       .then(response => response.json())\n//       .then(data => {\n//         setFilms(data);\n//       })\n//       .catch(error => console.error('Error:', error));\n//   };\n\n//   const addFilm = (filmData) => {\n//     const formData = new FormData();\n//     formData.append('title', filmData.title);\n//     formData.append('description', filmData.description);\n//     formData.append('rating', filmData.rating);\n//     formData.append('thumbnail', filmData.thumbnail);\n//     formData.append('video', filmData.file);\n\n//     fetch('http://localhost:3000/films', {\n//       method: 'POST',\n//       body: formData,\n//     })\n//       .then(response => response.json())\n//       .then(() => {\n//         fetchFilms();\n//         setShowForm(false);\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n//   };\n\n//   const handleCancel = () => {\n//     setShowForm(false);\n//   };\n\n\n//   const onCloseFormAndRefresh = () => {\n//     setShowForm(false);\n//     setTimeout(() => {\n//       window.location.reload();\n//     }, 100);\n//   };\n\n\n//   useEffect(() => {\n//     fetchFilms();\n//   }, []);\n\n//   const deleteFilm = (filmId) => {\n//     fetch(`http://localhost:3000/films/${filmId}`, {\n//       method: 'DELETE',\n//     })\n//       .then(response => {\n//         if (response.ok) {\n//           fetchFilms();\n//         } else {\n//           console.error('Failed to delete the film');\n//         }\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n//   };\n\n//   const handleEditFilm = (updatedFilm) => {\n//     fetch(`http://localhost:3000/films/${updatedFilm.id}`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(updatedFilm),\n//     })\n//       .then(response => {\n//         if (response.ok) {\n//           fetchFilms();\n//         } else {\n//           console.error('Failed to update the film');\n//         }\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n\n//     setShowForm(false);\n//     setEditableFilm(null);\n//   };\n\n//   const startEditFilm = (film) => {\n//     setEditableFilm(film);\n//     setShowForm(true);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Header /> { }\n//       <h1>Filmdatabas</h1>\n//       <button onClick={() => { setShowForm(true); setEditableFilm(null); }}>Add New Film</button>\n//       {showForm && (\n//         <FilmForm\n//           filmToEdit={editableFilm}\n//           onAddFilm={addFilm}\n//           onEditFilm={handleEditFilm}\n//           onCancel={handleCancel}\n//           onCloseFormAndRefresh={onCloseFormAndRefresh}\n//         />\n//       )}\n//       <FilmList\n//         films={films}\n//         onDelete={deleteFilm}\n//         onEdit={startEditFilm}\n//       />\n//       <Footer /> { }\n//     </div>\n//   );\n// }\n\n// export default App;\n\n"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}