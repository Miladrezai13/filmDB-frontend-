{"ast":null,"code":"var _jsxFileName = \"/Users/milad888/Desktop/Ho\\u0308gskolan/webb utveckling 2/inl5/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FilmForm from './FilmForm';\nimport FilmList from './FilmList';\nimport Header from './Header';\nimport Footer from './Footer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [films, setFilms] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editableFilm, setEditableFilm] = useState(null);\n  const fetchFilms = () => {\n    fetch('http://localhost:3000/films').then(response => response.json()).then(data => {\n      setFilms(data);\n    }).catch(error => console.error('Error:', error));\n  };\n\n  // this function only add the film to the frontend \n  const addFilm = filmData => {\n    // Assuming filmData has an id, if not, you can generate a unique id\n    const newFilm = {\n      id: Date.now(),\n      // or any other unique id generation logic\n      title: filmData.title,\n      description: filmData.description,\n      rating: filmData.rating,\n      // Assuming you handle the thumbnail and video file as URLs or data URIs\n      thumbnail: filmData.thumbnail,\n      // Update this based on how you handle files\n      video: filmData.file // Update this based on how you handle files\n    };\n    setFilms([...films, newFilm]);\n    setShowForm(false);\n  };\n\n  // function below add the film to databas in backend \n  // const addFilm = (filmData) => {\n  //   const formData = new FormData();\n  //   formData.append('title', filmData.title);\n  //   formData.append('description', filmData.description);\n  //   formData.append('rating', filmData.rating);\n  //   formData.append('thumbnail', filmData.thumbnail);\n  //   formData.append('video', filmData.file);\n\n  //   fetch('http://localhost:3000/films', {\n  //     method: 'POST',\n  //     body: formData,\n  //   })\n  //     .then(response => response.json())\n  //     .then(() => {\n  //       fetchFilms();\n  //       setShowForm(false);\n  //     })\n  //     .catch((error) => {\n  //       console.error('Error:', error);\n  //     });\n  // };\n\n  const handleCancel = () => {\n    setShowForm(false);\n  };\n  const onCloseFormAndRefresh = () => {\n    setShowForm(false);\n    // setTimeout(() => {\n    //   window.location.reload();\n    // }, 100);\n  };\n  useEffect(() => {\n    fetchFilms();\n  }, []);\n  const deleteFilm = filmId => {\n    fetch(`http://localhost:3000/films/${filmId}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (response.ok) {\n        // Update state to reflect deletion\n        setFilms(films.filter(film => film.id !== filmId));\n      } else {\n        console.error('Failed to delete the film');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  // const deleteFilm = (filmId) => {\n  //   fetch(`http://localhost:3000/films/${filmId}`, {\n  //     method: 'DELETE',\n  //   })\n  //     .then(response => {\n  //       if (response.ok) {\n  //         fetchFilms();\n  //       } else {\n  //         console.error('Failed to delete the film');\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       console.error('Error:', error);\n  //     });\n  // };\n\n  const handleEditFilm = updatedFilm => {\n    fetch(`http://localhost:3000/films/${updatedFilm.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedFilm)\n    }).then(response => {\n      if (response.ok) {\n        fetchFilms();\n      } else {\n        console.error('Failed to update the film');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    setShowForm(false);\n    setEditableFilm(null);\n  };\n  const startEditFilm = film => {\n    setEditableFilm(film);\n    setShowForm(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Filmdatabas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShowForm(true);\n        setEditableFilm(null);\n      },\n      children: \"Add New Film\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(FilmForm, {\n      filmToEdit: editableFilm,\n      onAddFilm: addFilm,\n      onEditFilm: handleEditFilm,\n      onCancel: handleCancel,\n      onCloseFormAndRefresh: onCloseFormAndRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FilmList, {\n      films: films,\n      onDelete: deleteFilm,\n      onEdit: startEditFilm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s/NYlTsWQQj6eDRyifJ1uYS2qA8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FilmForm","FilmList","Header","Footer","jsxDEV","_jsxDEV","App","_s","films","setFilms","showForm","setShowForm","editableFilm","setEditableFilm","fetchFilms","fetch","then","response","json","data","catch","error","console","addFilm","filmData","newFilm","id","Date","now","title","description","rating","thumbnail","video","file","handleCancel","onCloseFormAndRefresh","deleteFilm","filmId","method","ok","filter","film","handleEditFilm","updatedFilm","headers","body","JSON","stringify","startEditFilm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","filmToEdit","onAddFilm","onEditFilm","onCancel","onDelete","onEdit","_c","$RefreshReg$"],"sources":["/Users/milad888/Desktop/Högskolan/webb utveckling 2/inl5/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FilmForm from './FilmForm';\nimport FilmList from './FilmList';\nimport Header from './Header';\nimport Footer from './Footer';\nimport './App.css';\n\n\n\nfunction App() {\n  const [films, setFilms] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editableFilm, setEditableFilm] = useState(null);\n\n  const fetchFilms = () => {\n    fetch('http://localhost:3000/films')\n      .then(response => response.json())\n      .then(data => {\n        setFilms(data);\n      })\n      .catch(error => console.error('Error:', error));\n  };\n\n\n  // this function only add the film to the frontend \n  const addFilm = (filmData) => {\n    // Assuming filmData has an id, if not, you can generate a unique id\n    const newFilm = {\n      id: Date.now(), // or any other unique id generation logic\n      title: filmData.title,\n      description: filmData.description,\n      rating: filmData.rating,\n      // Assuming you handle the thumbnail and video file as URLs or data URIs\n      thumbnail: filmData.thumbnail, // Update this based on how you handle files\n      video: filmData.file // Update this based on how you handle files\n    };\n\n    setFilms([...films, newFilm]);\n    setShowForm(false);\n  };\n\n\n\n\n  // function below add the film to databas in backend \n  // const addFilm = (filmData) => {\n  //   const formData = new FormData();\n  //   formData.append('title', filmData.title);\n  //   formData.append('description', filmData.description);\n  //   formData.append('rating', filmData.rating);\n  //   formData.append('thumbnail', filmData.thumbnail);\n  //   formData.append('video', filmData.file);\n\n  //   fetch('http://localhost:3000/films', {\n  //     method: 'POST',\n  //     body: formData,\n  //   })\n  //     .then(response => response.json())\n  //     .then(() => {\n  //       fetchFilms();\n  //       setShowForm(false);\n  //     })\n  //     .catch((error) => {\n  //       console.error('Error:', error);\n  //     });\n  // };\n\n  const handleCancel = () => {\n    setShowForm(false);\n  };\n\n\n\n\n  const onCloseFormAndRefresh = () => {\n    setShowForm(false);\n    // setTimeout(() => {\n    //   window.location.reload();\n    // }, 100);\n  };\n\n\n  useEffect(() => {\n    fetchFilms();\n  }, []);\n\n\n\n  const deleteFilm = (filmId) => {\n    fetch(`http://localhost:3000/films/${filmId}`, {\n      method: 'DELETE',\n    })\n      .then(response => {\n        if (response.ok) {\n          // Update state to reflect deletion\n          setFilms(films.filter(film => film.id !== filmId));\n        } else {\n          console.error('Failed to delete the film');\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  };\n\n\n\n  // const deleteFilm = (filmId) => {\n  //   fetch(`http://localhost:3000/films/${filmId}`, {\n  //     method: 'DELETE',\n  //   })\n  //     .then(response => {\n  //       if (response.ok) {\n  //         fetchFilms();\n  //       } else {\n  //         console.error('Failed to delete the film');\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       console.error('Error:', error);\n  //     });\n  // };\n\n  const handleEditFilm = (updatedFilm) => {\n    fetch(`http://localhost:3000/films/${updatedFilm.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedFilm),\n    })\n      .then(response => {\n        if (response.ok) {\n          fetchFilms();\n        } else {\n          console.error('Failed to update the film');\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n    setShowForm(false);\n    setEditableFilm(null);\n  };\n\n  const startEditFilm = (film) => {\n    setEditableFilm(film);\n    setShowForm(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header /> { }\n      <h1>Filmdatabas</h1>\n      <button onClick={() => { setShowForm(true); setEditableFilm(null); }}>Add New Film</button>\n      {showForm && (\n        <FilmForm\n          filmToEdit={editableFilm}\n          onAddFilm={addFilm}\n          onEditFilm={handleEditFilm}\n          onCancel={handleCancel}\n          onCloseFormAndRefresh={onCloseFormAndRefresh}\n        />\n      )}\n      <FilmList\n        films={films}\n        onDelete={deleteFilm}\n        onEdit={startEditFilm}\n      />\n      <Footer /> { }\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}