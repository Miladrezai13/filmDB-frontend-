{"ast":null,"code":"\n\n// import React, { useState, useEffect } from 'react';\n// import FilmForm from './FilmForm';\n// import FilmList from './FilmList';\n// import Header from './Header';\n// import Footer from './Footer';\n// import './App.css';\n\n// function App() {\n//   const [films, setFilms] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [editableFilm, setEditableFilm] = useState(null);\n\n//   const fetchFilms = () => {\n//     fetch('http://localhost:3000/films')\n//       .then(response => response.json())\n//       .then(data => {\n//         setFilms(data);\n//       })\n//       .catch(error => console.error('Error:', error));\n//   };\n\n//   const addFilm = (filmData) => {\n//     const formData = new FormData();\n//     formData.append('title', filmData.title);\n//     formData.append('description', filmData.description);\n//     formData.append('rating', filmData.rating);\n//     formData.append('thumbnail', filmData.thumbnail);\n//     formData.append('video', filmData.file);\n\n//     fetch('http://localhost:3000/films', {\n//       method: 'POST',\n//       body: formData,\n//     })\n//       .then(response => response.json())\n//       .then(() => {\n//         fetchFilms();\n//         setShowForm(false);\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n//   };\n\n//   const handleCancel = () => {\n//     setShowForm(false);\n//   };\n\n//   const onCloseFormAndRefresh = () => {\n//     setShowForm(false);\n//     setTimeout(() => {\n//       window.location.reload();\n//     }, 100);\n//   };\n\n//   useEffect(() => {\n//     fetchFilms();\n//   }, []);\n\n//   const deleteFilm = (filmId) => {\n//     fetch(`http://localhost:3000/films/${filmId}`, {\n//       method: 'DELETE',\n//     })\n//       .then(response => {\n//         if (response.ok) {\n//           fetchFilms();\n//         } else {\n//           console.error('Failed to delete the film');\n//         }\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n//   };\n\n//   const handleEditFilm = (updatedFilm) => {\n//     fetch(`http://localhost:3000/films/${updatedFilm.id}`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(updatedFilm),\n//     })\n//       .then(response => {\n//         if (response.ok) {\n//           fetchFilms();\n//         } else {\n//           console.error('Failed to update the film');\n//         }\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n\n//     setShowForm(false);\n//     setEditableFilm(null);\n//   };\n\n//   const startEditFilm = (film) => {\n//     setEditableFilm(film);\n//     setShowForm(true);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Header /> { }\n//       <h1>Filmdatabas</h1>\n//       <button onClick={() => { setShowForm(true); setEditableFilm(null); }}>Add New Film</button>\n//       {showForm && (\n//         <FilmForm\n//           filmToEdit={editableFilm}\n//           onAddFilm={addFilm}\n//           onEditFilm={handleEditFilm}\n//           onCancel={handleCancel}\n//           onCloseFormAndRefresh={onCloseFormAndRefresh}\n//         />\n//       )}\n//       <FilmList\n//         films={films}\n//         onDelete={deleteFilm}\n//         onEdit={startEditFilm}\n//       />\n//       <Footer /> { }\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/milad888/Desktop/HoÌˆgskolan/webb utveckling 2/inl5/src/App.js"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import FilmForm from './FilmForm';\n// import FilmList from './FilmList';\n// import Header from './Header';\n// import Footer from './Footer';\n// import './App.css';\n\n\n\n// function App() {\n//   const [films, setFilms] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [editableFilm, setEditableFilm] = useState(null);\n\n//   const fetchFilms = () => {\n//     fetch('http://localhost:3000/films')\n//       .then(response => response.json())\n//       .then(data => {\n//         setFilms(data);\n//       })\n//       .catch(error => console.error('Error:', error));\n//   };\n\n//   const addFilm = (filmData) => {\n//     const formData = new FormData();\n//     formData.append('title', filmData.title);\n//     formData.append('description', filmData.description);\n//     formData.append('rating', filmData.rating);\n//     formData.append('thumbnail', filmData.thumbnail);\n//     formData.append('video', filmData.file);\n\n//     fetch('http://localhost:3000/films', {\n//       method: 'POST',\n//       body: formData,\n//     })\n//       .then(response => response.json())\n//       .then(() => {\n//         fetchFilms();\n//         setShowForm(false);\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n//   };\n\n//   const handleCancel = () => {\n//     setShowForm(false);\n//   };\n\n\n//   const onCloseFormAndRefresh = () => {\n//     setShowForm(false);\n//     setTimeout(() => {\n//       window.location.reload();\n//     }, 100);\n//   };\n\n\n//   useEffect(() => {\n//     fetchFilms();\n//   }, []);\n\n//   const deleteFilm = (filmId) => {\n//     fetch(`http://localhost:3000/films/${filmId}`, {\n//       method: 'DELETE',\n//     })\n//       .then(response => {\n//         if (response.ok) {\n//           fetchFilms();\n//         } else {\n//           console.error('Failed to delete the film');\n//         }\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n//   };\n\n//   const handleEditFilm = (updatedFilm) => {\n//     fetch(`http://localhost:3000/films/${updatedFilm.id}`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(updatedFilm),\n//     })\n//       .then(response => {\n//         if (response.ok) {\n//           fetchFilms();\n//         } else {\n//           console.error('Failed to update the film');\n//         }\n//       })\n//       .catch((error) => {\n//         console.error('Error:', error);\n//       });\n\n//     setShowForm(false);\n//     setEditableFilm(null);\n//   };\n\n//   const startEditFilm = (film) => {\n//     setEditableFilm(film);\n//     setShowForm(true);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Header /> { }\n//       <h1>Filmdatabas</h1>\n//       <button onClick={() => { setShowForm(true); setEditableFilm(null); }}>Add New Film</button>\n//       {showForm && (\n//         <FilmForm\n//           filmToEdit={editableFilm}\n//           onAddFilm={addFilm}\n//           onEditFilm={handleEditFilm}\n//           onCancel={handleCancel}\n//           onCloseFormAndRefresh={onCloseFormAndRefresh}\n//         />\n//       )}\n//       <FilmList\n//         films={films}\n//         onDelete={deleteFilm}\n//         onEdit={startEditFilm}\n//       />\n//       <Footer /> { }\n//     </div>\n//   );\n// }\n\n// export default App;\n\n"],"mappings":";;AAaA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}